module.exports = {
  env: {
    browser: true,
    es2021: true,
  },
  extends: [
    'airbnb',
    'airbnb/hooks',
    'eslint:recommended',
    'plugin:import/typescript',
    'plugin:react/recommended',
    'plugin:react-hooks/recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
  ],
  overrides: [],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    sourceType: 'module',
    tsconfigRootDir: './',
    ecmaVersion: 'latest',
    project: './tsconfig.json',
  },
  plugins: ['react', '@typescript-eslint', 'react-hooks', 'prettier', 'import'],
  rules: {
    'prettier/prettier': 0,
    'import/extensions': 0,
    'import/prefer-default-export': 0,
    indent: 0,
    'no-void': 0,
    'no-undef': 0,
    'no-shadow': 0,
    'no-console': 1,
    'no-plusplus': 2,
    'comma-spacing': 0,
    'max-classes-per-file': ['error', { ignoreExpressions: true, max: 5 }],
    'no-nested-ternary': 2,
    'operator-linebreak': 0,
    'no-confusing-arrow': 0,
    'no-use-before-define': 2,
    'object-curly-newline': 0,
    'class-methods-use-this': 0,
    'no-useless-constructor': 0,
    'function-paren-newline': 0,
    'implicit-arrow-linebreak': 0,
    'no-promise-executor-return': 0,
    '@typescript-eslint/no-namespace': 1,
    '@typescript-eslint/no-unsafe-call': 1,
    '@typescript-eslint/no-explicit-any': 0,
    '@typescript-eslint/no-unsafe-return': 1,
    '@typescript-eslint/no-unsafe-argument': 1,
    '@typescript-eslint/no-unsafe-assignment': 1,
    '@typescript-eslint/interface-name-prefix': 0,
    '@typescript-eslint/no-unsafe-member-access': 1,
    '@typescript-eslint/explicit-function-return-type': 0,
    '@typescript-eslint/explicit-module-boundary-types': 0,
    'jsx-a11y/media-has-caption': 0,
    'jsx-a11y/click-events-have-key-events': 0,
    'jsx-a11y/no-noninteractive-element-interactions': 0,
    'react/prop-types': [0],
    'react/jsx-curly-newline': 0,
    'react/jsx-wrap-multilines': 0,
    'react-hooks/rules-of-hooks': 0,
    'react-hooks/exhaustive-deps': 1,
    'react/jsx-one-expression-per-line': 0,
    'react/no-unstable-nested-components': 0,
    'react/jsx-filename-extension': [
      1,
      {
        extensions: ['.tsx'],
      },
    ],
    'no-multiple-empty-lines': [
      2,
      {
        max: 1,
        maxEOF: 1,
      },
    ],
    '@typescript-eslint/no-unused-vars': [
      2,
      { argsIgnorePattern: '^_', varsIgnorePattern: '^_' },
    ],
    'react/function-component-definition': [
      2,
      { namedComponents: 'arrow-function' },
    ],
    'react/jsx-props-no-spreading': [
      2,
      {
        html: 'enforce',
        exceptions: [
          'Route',
          'FastField',
          'TextInput',
          'Pagination',
          'PasswordInput',
          'Input.Root',
          'Input.Password',
          'Wrapper',
          'NavigationButtons',
          'Button',
          'Stepper.Step',
          'svg',
        ],
      },
    ],
    'sort-imports': [
      2,
      {
        ignoreCase: false,
        ignoreDeclarationSort: true,
        memberSyntaxSortOrder: ['single', 'none', 'all', 'multiple'],
        allowSeparatedGroups: true,
      },
    ],
    'import/order': [
      2,
      {
        groups: [
          'builtin',
          'external',
          'internal',
          'parent',
          'sibling',
          'index',
          'object',
          'type',
        ],
        pathGroups: [
          {
            pattern: '@/actions/**',
            group: 'internal',
            position: 'after',
          },
          {
            pattern: '@/components/**',
            group: 'internal',
            position: 'after',
          },
          {
            pattern: '@/hooks/**',
            group: 'internal',
            position: 'after',
          },
          {
            pattern: '@/models/**',
            group: 'internal',
            position: 'after',
          },
          {
            pattern: '@/pages/**',
            group: 'internal',
            position: 'after',
          },
          {
            pattern: '@/common/**',
            group: 'internal',
            position: 'after',
          },
          {
            pattern: '@/styles/**',
            group: 'internal',
            position: 'after',
          },
          {
            pattern: '@/routes/**',
            group: 'internal',
            position: 'after',
          },
        ],
        pathGroupsExcludedImportTypes: ['type'],
        'newlines-between': 'always',
        alphabetize: {
          order: 'asc',
          caseInsensitive: true,
        },
      },
    ],
  },
  settings: {
    'import/resolver': {
      typescript: {},
    },
    react: {
      version: 'detect',
      node: {
        paths: ['src'],
        extensions: ['.ts', '.tsx'],
      },
    },
  },
};
